#include "bits/stdc++.h"

#define ll long long
#define pb push_back
#define vi vector<int>
#define vb vector<bool>
#define vll vector<ll>
#define vvi vector<vector<int>>
#define vvll vector<vector<ll>>
#define pii pair<int, int>
#define pll pair<ll, ll>
#define vpii vector<pair<int, int>>
#define vpll vector<pair<ll,ll>>
#define endl '\n'
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#ifdef ONLINE_JUDGE
    # define watch(x) {}
    # define printv(n) {}
#else
#define watch(x) {cerr<<(#x)<<" is "<<(x)<<endl;}
#define printv(n) {for(auto v:n) cerr<<v<<" ";cerr<<endl;}
#endif
using namespace std;

map<pii,bool> dmap;
map<pii,bool> evis;
map<pii,int> omap;

void dfs(int node,vi& G,vb& vis,bool dir){
    if(!vis[node]){
        vis[node]=true;
        for(int n: G[node]){
           pii e=make_pair(min(node,n),max(node,n));
           if (!evis[e]){
              evis[e]=true;
              dmap[e]=!dir;    
            }
            dfs(n,G,vis,!dir);
        }
    }
}

int clength(int node,vi& G,vb& vis,int cl){
   if(vis[node]){
   
   }
}

int main () {
    fastio
    int N; int M; cin>>N>>M;
    vi G(N+1);
    for(int i=0;i<M;i++){
        int a; int b; cin>>a>>b;
        G[a].pb(b);
        G[b].pb(a);
        omap[min(a,b),max(a,b)]=i;
    }

}
